buildscript {
    repositories {
        mavenLocal()
        mavenCentral()
        maven {
          url "https://plugins.gradle.org/m2/"
        }
    }

    dependencies {
        classpath "org.elasticsearch.gradle:build-tools:${es_version}"
        classpath: "gradle.plugin.com.github.jengelman.gradle.plugins:shadow:7.0.0"
    }
}

group = 'org.elasticsearch.plugin'
version = "${plugin_version}"

apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'elasticsearch.esplugin'
apply plugin: 'elasticsearch.yaml-rest-test'
apply plugin: 'com.github.johnrengelman.shadow'

// license of this project
licenseFile = rootProject.file('LICENSE')
noticeFile = rootProject.file('README.md')

publishing {
    publications {
        // add license information to generated poms
        all {
            pom.withXml { XmlProvider xml ->
                Node node = xml.asNode()

                Node license = node.appendNode('licenses').appendNode('license')
                license.appendNode('name', 'The MIT License (MIT)')
                license.appendNode('url', './LICENSE')
                license.appendNode('distribution', 'repo')

                Node developer = node.appendNode('developers').appendNode('developer')
                developer.appendNode('name', 'Opendatasoft')
                developer.appendNode('url', 'https://www.opendatasoft.com/')
            }
        }
    }
}

esplugin {
    name 'pathhierarchy-aggregation'
    description 'Return a path hierarchy aggregation'
    classname 'org.opendatasoft.elasticsearch.plugin.PathHierarchyAggregation'
    licenseFile = rootProject.file('LICENSE')
    noticeFile = rootProject.file('README.md')
}

dependencies {
    implementation "org.elasticsearch:elasticsearch:${es_version}"
    //FIXME: Yaml rest test won't run without this in 7.9.0
    yamlRestTestImplementation "org.apache.logging.log4j:log4j-core:${versions.log4j}"
}

// restResources {
//     restApi {
//         includeCore '*'
//     }
// }

// Skip license headers check
//licenseHeaders.enabled = false

// Use elasticsearch checkstyle rules
//checkstyleTest.enabled = true

//dependencyLicenses.enabled = true

//thirdPartyAudit.enabled = true

//FIXME: This task should be removed in elastic, disabling until is done.
//integTest.enabled = false
